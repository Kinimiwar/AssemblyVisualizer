<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Converters="clr-namespace:AssemblyVisualizer.Controls.Graph.Converters"
                    xmlns:Graph="clr-namespace:AssemblyVisualizer.Controls.Graph" >

    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!--Hyperlink-->
    <Style x:Key="HyperlinkStyle" TargetType="{x:Type Hyperlink}">
        <Setter Property="TextDecorations" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="#FF0083BF"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="TextDecorations" Value="Underline"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Image button with shadow in MouseOver-->
    <Style x:Key="ImageButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="brdImage"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>                        
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdImage" Property="Effect">
                                <Setter.Value>
                                    <DropShadowEffect/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="brdImage" Property="Opacity" Value="0.4"/>                                
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LooklessButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="brdImage"
                            Width="{TemplateBinding Width}" 
                            Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Edge style-->
    <Converters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />

    <Style TargetType="{x:Type Graph:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Graph:EdgeControl}">
                    <Path Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="2"
                                  MinWidth="1"
                                  MinHeight="1"
                                  ToolTip="{TemplateBinding ToolTip}"
                                  x:Name="edgePath">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(Graph:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(Graph:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(Graph:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(Graph:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                    </MultiBinding>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <Setter Property="MinWidth" Value="1" />
        <Setter Property="MinHeight" Value="1" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="Foreground" Value="Silver" />
        <Setter Property="Opacity" Value="0.5" />
        <Style.Triggers>
            <Trigger Property="Graph:EdgeControl.IsTwoWay"
                     Value="True">
                <Setter Property="Foreground" Value="Thistle" />
            </Trigger>
            <Trigger Property="Graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <Trigger Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                <Setter Property="Foreground" Value="Yellow" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="InEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="#FF9900" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="OutEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="#3578FF" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:EdgeControl.IsTwoWay"
                               Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="DarkViolet" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>