<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:ZoomControl="clr-namespace:AssemblyVisualizer.Controls.ZoomControl" 
                    xmlns:Converters="clr-namespace:AssemblyVisualizer.Controls.ZoomControl.Converters"                     
                    xmlns:Graph="clr-namespace:AssemblyVisualizer.Controls.Graph" 
                    xmlns:GraphConverters="clr-namespace:AssemblyVisualizer.Controls.Graph.Converters"
                    xmlns:Behaviors="clr-namespace:AssemblyVisualizer.Behaviors">

    <!--ZoomControl-->
    
    <Converters:DoubleToLog10Converter x:Key="log10Converter" />
    <Converters:EqualityToBooleanConverter x:Key="equalityConverter" />

    <Style TargetType="{x:Type ZoomControl:ZoomControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ZoomControl:ZoomControl}">
                    <Grid>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                ClipToBounds="{TemplateBinding ClipToBounds}">
                            <ZoomControl:ZoomContentPresenter x:Name="PART_Presenter"
                                                           ClipToBounds="False" />
                        </Border>
                        <Canvas>
                            
                            <!-- Controls -->
                            <Border Padding="5"
                                    CornerRadius="5"
                                    Background="#88C0C0C0"
                                    Canvas.Left="20"
                                    Canvas.Top="20"
                                    ToolTipService.InitialShowDelay="0"
                                    Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ZoomControl:ZoomControl}}, Path=HideZoom}">
                                <Border.ToolTip>
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock><Run FontWeight="Bold">CTRL + Wheel:</Run> Zoom In / Out</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">ALT + Drag:</Run> ZoomBox</TextBlock>
                                        <TextBlock><Run FontWeight="Bold">(SHIFT +) Drag:</Run> Pan</TextBlock>
                                    </StackPanel>
                                </Border.ToolTip>
                                <StackPanel Orientation="Vertical">
                                    <StackPanel.Resources>
                                        <Style TargetType="{x:Type RadioButton}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type RadioButton}">
                                                        <Border x:Name="border"
                                                                BorderBrush="Black"
                                                                Background="Silver"
                                                                BorderThickness="1"
                                                                CornerRadius="5"
                                                                Width="40"
                                                                Height="40"
                                                                Margin="2"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center">
                                                            <ContentPresenter HorizontalAlignment="Center"
                                                                              VerticalAlignment="Center" />
                                                        </Border>

                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver"
                                                                     Value="True">
                                                                <Setter TargetName="border"
                                                                        Property="Background"
                                                                        Value="WhiteSmoke" />
                                                            </Trigger>
                                                            <Trigger Property="IsChecked"
                                                                     Value="True">
                                                                <Setter TargetName="border"
                                                                        Property="Background"
                                                                        Value="DarkGray" />
                                                                <Setter TargetName="border"
                                                                        Property="TextBlock.FontWeight"
                                                                        Value="Bold" />
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </StackPanel.Resources>
                                    <Slider Height="150"
                                            Minimum="{TemplateBinding MinZoom,Converter={StaticResource log10Converter}}"
                                            Maximum="{TemplateBinding MaxZoom,Converter={StaticResource log10Converter}}"
                                            Value="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,Mode=TwoWay,Converter={StaticResource log10Converter}}"
                                            HorizontalAlignment="Center"
                                            Ticks="0.1, 0.25, 0.5, 0.75, 1.0, 1.25, 1.5, 2"
                                            AutoToolTipPlacement="BottomRight"
                                            AutoToolTipPrecision="1"
                                            TickPlacement="BottomRight"
                                            TickFrequency="1"
                                            LargeChange="1"
                                            SmallChange="0.1"
                                            Orientation="Vertical" />
                                    <TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent},Path=Zoom,StringFormat='{}{0:F2}x'}"
                                               HorizontalAlignment="Center"
                                               FontWeight="Bold" />
                                    <RadioButton Content="1:1"
                                                 GroupName="rbgZoomMode"
                                                 IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource equalityConverter}, ConverterParameter={x:Static ZoomControl:ZoomControlModes.Original}, Mode=OneWay}" />
                                    <RadioButton Content="Fill"
                                                 GroupName="rbgZoomMode"
                                                 IsChecked="{Binding Mode, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource equalityConverter}, ConverterParameter={x:Static ZoomControl:ZoomControlModes.Fill}, Mode=OneWay}" />
                                </StackPanel>
                            </Border>
                            
                            <!-- ZoomBox -->
                            <Border BorderBrush="{TemplateBinding ZoomBoxBorderBrush}"
                                    BorderThickness="{TemplateBinding ZoomBoxBorderThickness}"
                                    Canvas.Left="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.X}"
                                    Canvas.Top="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Y}"
                                    Opacity="{TemplateBinding ZoomBoxOpacity}"
                                    Background="{TemplateBinding ZoomBoxBackground}"
                                    Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Width}"
                                    Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ZoomBox.Height}" />
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background"
                Value="White" />
        <Setter Property="ZoomBoxBackground">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0.0, 0.0"
                                     EndPoint="1.0, 1.0">
                    <GradientStop Color="Silver"
                                  Offset="0.0" />
                    <GradientStop Color="DarkGray"
                                  Offset="1.0" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="ZoomBoxBorderBrush"
                Value="Black" />
        <Setter Property="ZoomBoxBorderThickness"
                Value="1" />
        <Setter Property="ClipToBounds"
                Value="True" />
        <Style.Triggers>
            <Trigger Property="ModifierMode"
                     Value="Pan">
                <Setter Property="Cursor"
                        Value="SizeAll" />
            </Trigger>
            <Trigger Property="ModifierMode"
                     Value="ZoomBox">
                <Setter Property="Cursor"
                        Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    
    
    
    
    
    <!--Graph-->

    <GraphConverters:EdgeRouteToPathConverter x:Key="routeToPathConverter" />
    <GraphConverters:PointArrayToString x:Key="pointsToStringConverter" />

    <Style TargetType="{x:Type Graph:EdgeControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Graph:EdgeControl}">
                    <Path Stroke="{TemplateBinding Foreground}"
                          StrokeThickness="{TemplateBinding StrokeThickness}"
                          MinWidth="1"
                          MinHeight="1"
                          ToolTip="{TemplateBinding ToolTip}"
                          x:Name="edgePath">
                        <Path.Data>
                            <PathGeometry>
                                <PathGeometry.Figures>
                                    <MultiBinding Converter="{StaticResource routeToPathConverter}">
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(Graph:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.(Graph:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Source.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(Graph:GraphCanvas.X)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.(Graph:GraphCanvas.Y)" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualWidth" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="Target.ActualHeight" />
                                        <Binding RelativeSource="{RelativeSource TemplatedParent}"
                                                 Path="RoutePoints" />
                                    </MultiBinding>
                                </PathGeometry.Figures>
                            </PathGeometry>
                        </Path.Data>
                    </Path>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" />
        <Setter Property="MinWidth"
                Value="1" />
        <Setter Property="MinHeight"
                Value="1" />
        <Setter Property="Background"
                Value="Red" />
        <Setter Property="Foreground"
                Value="Silver" />
        <Setter Property="Opacity"
                Value="0.5" />
        <Style.Triggers>
            <Trigger Property="Graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                <Setter Property="Foreground"
                        Value="Black" />
            </Trigger>
            <Trigger Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                <Setter Property="Foreground"
                        Value="Yellow" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="InEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="Red" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="OutEdge" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground"
                        Value="Blue" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Graph:VertexControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Graph:VertexControl}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            ToolTip="{TemplateBinding ToolTip}">
                        <ContentPresenter Content="{TemplateBinding Vertex}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
        <Setter Property="Behaviors:DragBehavior.IsDragEnabled"
                Value="True" />
        <Setter Property="Behaviors:DragBehavior.X"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(Graph:GraphCanvas.X),Mode=TwoWay}" />
        <Setter Property="Behaviors:DragBehavior.Y"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(Graph:GraphCanvas.Y),Mode=TwoWay}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Style.Triggers>
            <Trigger Property="Graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="Orange" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </Trigger>
            <Trigger Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="Yellow" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Source" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="Red" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Target" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="Blue" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Graph:CompoundVertexControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Graph:CompoundVertexControl}">
                    <ControlTemplate.Resources>
                        <Style TargetType="{x:Type Graph:VertexControl}">
                            <Setter Property="Background"
                                    Value="White" />
                        </Style>
                    </ControlTemplate.Resources>
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Expander IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}">
                            <Expander.Header>
                                <ContentPresenter Content="{TemplateBinding Vertex}" ToolTip="{TemplateBinding ToolTip}" />
                            </Expander.Header>

                            <ItemsControl x:Name="PART_InnerCanvas"
                                          ItemsSource="{TemplateBinding Vertices}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Vertical" />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </Expander>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Graph:GraphElementBehaviour.HighlightTrigger"
                Value="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" />
        <Setter Property="Behaviors:DragBehavior.IsDragEnabled"
                Value="True" />
        <Setter Property="Behaviors:DragBehavior.X"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(Graph:GraphCanvas.X),Mode=TwoWay}" />
        <Setter Property="Behaviors:DragBehavior.Y"
                Value="{Binding RelativeSource={RelativeSource Self},Path=(Graph:GraphCanvas.Y),Mode=TwoWay}" />
        <Setter Property="BorderThickness"
                Value="2" />
        <Setter Property="BorderBrush"
                Value="Silver" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0"
                                     EndPoint="1,1">
                    <GradientStop Color="White"
                                  Offset="0" />
                    <GradientStop Color="BurlyWood"
                                  Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="LayoutMode"
                     Value="Automatic">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Graph:CompoundVertexControl}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}">
                                <Expander IsExpanded="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsExpanded,Mode=TwoWay}">
                                    <Expander.Header>
                                        <ContentPresenter Content="{TemplateBinding Vertex}" />
                                    </Expander.Header>

                                    <ItemsControl x:Name="PART_InnerCanvas"
                                                  ItemsSource="{TemplateBinding Vertices}">
                                        <ItemsControl.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <Graph:GraphCanvas Background="White" />
                                            </ItemsPanelTemplate>
                                        </ItemsControl.ItemsPanel>
                                    </ItemsControl>
                                </Expander>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="1,1">
                            <GradientStop Color="White"
                                          Offset="0" />
                            <GradientStop Color="Silver"
                                          Offset="1" />
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Graph:GraphElementBehaviour.IsHighlighted"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="Orange" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </Trigger>
            <Trigger Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                     Value="True">
                <Setter Property="BorderBrush"
                        Value="Yellow" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Source" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="Red" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Graph:GraphElementBehaviour.IsSemiHighlighted"
                               Value="True" />
                    <Condition Property="Graph:GraphElementBehaviour.SemiHighlightInfo"
                               Value="Target" />
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush"
                        Value="Blue" />
                <Setter Property="BorderThickness"
                        Value="2" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>